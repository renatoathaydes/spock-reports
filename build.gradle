plugins {
    id "com.jfrog.bintray" version "1.6"
    id 'groovy'
    id 'idea'
    id 'maven'
}

defaultTasks 'clean', 'jar', 'test'

group = 'com.athaydes'
version = "2.0-RC2"
description = 'This project is a global extension for Spock to create test (or, in Spock terms, Specifications) reports.'

def groovyVersion = '3.0.1'
def spockVersion = '2.0-M4-groovy-3.0'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation "org.codehaus.groovy:groovy:${groovyVersion}"
    implementation "org.codehaus.groovy:groovy-xml:${groovyVersion}"
    implementation "org.codehaus.groovy:groovy-json:${groovyVersion}"
    implementation "org.codehaus.groovy:groovy-templates:${groovyVersion}"
    implementation "org.spockframework:spock-core:${spockVersion}", {
        exclude group: 'org.codehaus.groovy'
    }
    implementation 'org.slf4j:slf4j-api:1.7.30'
    testImplementation 'org.junit.platform:junit-platform-testkit:1.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'
    testImplementation "org.codehaus.groovy:groovy-test:${groovyVersion}"
    testImplementation "cglib:cglib-nodep:3.2.10"
    testImplementation "org.slf4j:slf4j-simple:1.7.30"
}

test {
    useJUnitPlatform()

    maxParallelForks = 4
    exclude '**/*FakeTest.class', '**/UnrolledSpec.class', '**/SpecIncludingExtraInfo.class'
    systemProperty 'project.buildDir', project.buildDir
    systemProperty 'org.slf4j.simpleLogger.defaultLogLevel', 'debug'
    testLogging.showStandardStreams = true
    beforeTest { descriptor ->
        logger.lifecycle( "Running test: " + descriptor )
    }
    testLogging {
        events "failed"
        exceptionFormat "full"
        showStackTraces = true
    }
}

jar {
    manifest {
        attributes(
                "Implementation-Title": "Athaydes-Spock-Reports",
                "Implementation-Version": version,
                "Automatic-Module-Name": 'com.athaydes.spock.reports' )
    }
}

/* Publishing config */

task javadocJar( type: Jar ) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar( type: Jar ) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

// add all the info required by Maven Central to the pom
configure( install.repositories.mavenInstaller ) {
    pom.project {
        inceptionYear '2013'
        name project.name
        packaging 'jar'
        description project.description

        url 'https://github.com/renatoathaydes/spock-reports'

        scm {
            connection 'git@github.com:renatoathaydes/spock-reports.git'
            developerConnection 'git@github.com:renatoathaydes/spock-reports.git'
            url 'https://github.com/renatoathaydes/spock-reports'
        }

        licenses {
            license {
                name 'The Apache License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
        }

        developers {
            developer {
                id 'renatoathaydes'
                name 'Renato Athaydes'
                email 'renato@athaydes.com'
            }
        }
    }
}

def getProjectProperty = { String propertyName ->
    project.properties[ propertyName ]
}

bintray {
    user = getProjectProperty "bintrayUserName"
    key = getProjectProperty "bintrayApiKey"
    configurations = [ 'archives' ]
    publish = true
    pkg {
        repo = 'maven'
        name = 'spock-reports'
        licenses = [ 'Apache-2.0' ]
        labels = [ 'groovy', 'java', 'spock', 'bdd', 'test', 'report' ]
        publicDownloadNumbers = true

        //noinspection GroovyAssignabilityCheck
        version {
            name = project.version
            vcsTag = project.version
            gpg {
                sign = true
            }
            mavenCentralSync {
                sync = true
                user = getProjectProperty 'ossrhUsername'
                password = getProjectProperty 'ossrhPassword'
                close = '1' // '0' to NOT close
            }
        }
    }
}

bintrayUpload.dependsOn build, sourcesJar
