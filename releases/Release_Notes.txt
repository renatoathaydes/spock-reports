2.5.0-groovy-3.0 - 2023 May 08

* backport of release 2.5.0-groovy-4.0 for Groovy 3.

2.5.0-groovy-4.0 - 2023 May 03

* Fixed how Unrolled feature is determined (changed in Spock 2 to be the default).
* Fixed #244 `reportInfo` added to the correct iteration on `@RollUp` test.
* Fixed feature header to stop showing iteration values, as values as shown in a table already.
* Made `Utils` class almost entirely `@CompileStatic` for better performance and safety.
* Changed `FAILURE` to `FAIL` in template reports for consistency.
* Improved unrolled spec features display names.

2.4.0-groovy-4 - 2022 Oct 30

* Upgrade Groovy version to 4.0.6.
* Minor performance improvements and quieter logging.

2.3.2-groovy-3.0 - 2022 Nov 14

* #235 fixed indentation of source code in vivid reports.
* #237 keep `where` block source code available for inclusion in template reports (thanks to @Gleethos).

2.3.1-groovy-3.0 - 2022 Aug 25

* #231 fixed disappearing blocks in vivid reports when spec uses annotations (thanks to @ArkiMargust).
* #228 more efficient generation of aggregated report.
* upgraded Spock to 2.1-groovy-3.0.

2.3.0-groovy-3.0 - 2022 Feb 06

* #222 fixed null-pointer when executing child specification (bug introduced in version `2.1-groovy-3.0`).
* execution times were added to every feature and iteration.
* styles for TOC-Return link were moved from HTML to CSS (`return-toc` CSS class).

2.2.0-groovy-3.0 - 2022 Jan 30

* #219 concurrent test execution caused reportInfo to put information in wrong feature/iteration.
* #219 **breaking change** on report templates. Please see this [commit](https://github.com/renatoathaydes/spock-reports/commit/d59834e3917725f70c63871d86975702b9b496ab) if your template breaks.
* #220 allow `testSourceRoots` to take not only String, but also File and Iterable or Closure providing String/File's.
* update Groovy version to `3.0.9` to support running on JDK 17.

2.1.1-groovy-3.0 - 2021 Nov 06

* #217 Fixed concurrency bug when executing parallel tests.
* #218 Fixed regression #212, null-pointer error on setup test failure.

2.1-groovy-3.0 - 2021 Sep 02

* #215 Support parallel execution of features.

2.0-groovy-3.0 - 2021 May 18

* Upgrade to Spock 2.0-groovy-3.0.

2.0-RC4 - 2021 May 03

* Upgrade to Spock 2.0-M5-groovy-3.0.
* Fixed issue #212 - error can happen when iteration fails before spec even gets initiated.
* Improved reporting of cleanupSpec errors.
* Better computation of errors and failures counts, as well as success rate.

2.0.1-RC3 - 2021 February 13

* Fixes the POM published to Maven Central, which was incorrect in the previous version.

2.0-RC3 - 2021 January 05

* Merged 1.8.0 fixes to the 2.0 branch.
* Upgrade to Spock 2.0-M4-groovy-3.0.

1.8.0 - 2020 October 04

* #193 added more statistics to reports.
* Fixed Java 9+ module loading issue #197.

2.0-RC2 - 2020 May 15

* Upgrade to Spock 2 and Groovy 3.

1.7.1 - 2020 March 10

* Publishing same code as 1.7.0 but compiled with Java 8. Use this version if Java 8 is required.

1.7.0 - 2020 March 10

* Upgraded Spock and Groovy versions to 1.2-groovy-2.5 and 2.5.10 respectively to support both Java 8 and Java 9+.

1.6.3 - 2020 January 04

* #144 include tests originating from a jar rather than the project's source code into the reports.
* #173 report correct number of failures when multiple failures are generated from same iteration, using `verifyAll`.
* #174 #187 include features declared in abstract base-class in all concrete sub-types.

1.6.2 - 2019 April 10

* #167 use UTF-8 to write all reports.
* #169 include line number of failure in report in more cases.
* #170 include ignored Specification in reports.
* Added new `totalFeatures` statistic to report results and improved accuracy of feature count.

1.6.1 - 2018 September 23

* #154 collect time each feature iteration takes to run, so information can be used in template reports.
* #154 added feature iteration time to markdown default template report.
* #155 allow location of aggregated json report file to be customized.
* #157 show extra reportInfo even when feature is ignored.
* tiny improvement in the appearance of example tables in HTML reports.

1.6.0 - 2018 May 30

* changed log level of message showing spock-reports config from warning to info.
* #147 vivid reports can include test methods which have parameters.
* #146 added specification's title and narrative to aggregated data.
* added spec's title to summary report. Allow configuring whether to show both name and title (default),
  only class name, or only title (if available).

1.5.0 - 2018 March 27

* #76 support Spock's @Issue configuration (issueUrlPrefix and issueNamePrefix).
* #131 Fixed bug causing OverlappingFileLockException when writing reports from multiple JVMs/Threads.
* #139 removed println statements.
* #138 added support for Specification parent class' code to be included in Vivid Reports.
* #132 added link to the summary report (index.html) in Spec HTML reports.
* #141 support for Spock's SpockConfig.groovy file to configure spock-reports.
* Added Automatic-Module-Name to Manifest to stabilize Java 9's module name.

1.4.0 - 2017 December 13

* #85 show data table with a single row in unrolled specifications.
* #79 support multiple report creators to be configured.
* #123 added extension methods to Specification class that allow information to be added to reports programmatically.

1.3.2 - 2017 September 26

* #109 any config file property can now be set as a system property as well
* #112 support for Spock's @PendingFeature annotation
* #118 show line of code responsible for test failure in vivid reports
* Java 7 support no longer tested as Gradle and Travis CI dropped support for running tests
* Spock version 1.1+ now required

1.3.1 - 2017 May 18

* #103 fixed NullPointerException when vivid report cannot find test sources
* documented and added default property for test sources root folder

1.3.0 - 2017 April 21

* #90 @Unrolled class should cause all features to unroll.
* #91 better dependency declaration on Groovy (only required modules).
* #92 new flag to allow disabling the generation of reports.
* #88 improved the display of @Title and @Narrative in HTML reports.
* Modernized the looks of the reports.
* #78 show project name and version in reports.
* #96 show Specification source code for blocks (vivid report) if enabled.

1.2.13 - 2016 October 02

* #70 template report showed wrong index for unrolled features.
* #73 ArrayIndexOutOfBoundsException for reports which faile at initialization.
* #75 show error in reports even when the Spec fields fail to initialize.
* #82 do not execute Runnables in the where block examples.

1.2.12 - 2016 June 09

* #68 fixed NPE caused by Spec setup method throwing an Exception.
* clearly indicate initialization error on specifications affected.
* small performance improvements in HTML report creator.
* #70 fixed index of unrolled feature items.
* ToC link to unrolled features now works correctly.
* #71 report shows features in execution order consistently (by @tilmanginzel).

1.2.11 - 2016 May 19

* #63 #67 fixed template reports aggregator NPE
* #65 fixed logging in report aggregator classes

1.2.10 - 2016 March 08

* Improved contents of the aggregated_data file so it may be used by external tools.

1.2.9 - 2016 February 14

* #54 optionally create separate css resources instead of inlining them in the html files.
* improved Maven pom with much more information and correct dependencies declarations.
* first version to be published on Maven Central as well as JCenter.
* all artifacts are now signed with gpg by the Bintray public key

1.2.8 - 2015 January 6

* #51 Replaced usage of @Log with @Slf4j.
* new option to include the stack-trace of a Throwable that caused a test failure in HTML reports.
* #49 Only make Strings given by @See and @Issue hyperlinks if they seem to be URLs.

1.2.7 - 2015 August 15

* #46 Added support for showing comment on Spock's @Ignore, @Issue, @See, @Title, @Narrative annotations to reports.
* Made it easier to write template reports by including more variables in the scope (see README).
* Fixed misplacement of "Return" link in html reports.

1.2.6 - 2015 August 12

* #43 Summary report now contains all specifications even when build runs in parallel (forked) mode.
* #36 Log much more information about config and errors (use the --info flag when running a build).
* Small bug fixes when logging errors.
* Try to create report dir more strongly if it does not already exist when writing the aggregated report
(related to parallel builds).
* Upgraded Gradle version used in the build to 2.2.
* Due to above - re-added transitive dependencies on Spock and Groovy as Gradle no longer supports
"provided" dependency hack. Users must exclude dependencies if they wish to use different versions and avoid conflicts.

1.2.5 - 2015 March 8

* #33 Support for Spock 1.0, but this version also works with Spock 0.7
* #27 Added new report creator - TemplateReportCreator

1.2.4 - 2015 February 14

* #18 Added character encoding for HTML reports
* Support for configuring some properties using environment variables
* Stopped using `println` in favour of using java.util.logging
* Added a Table Of Contents to HTML reports (can be turned off via config file)

1.2.3 - 2014 November 08

* #15 Downgraded minimum Groovy version required to 2.0.8 (benefits some Grails users).
* Ensured successRate in reports gets bounded between 0 and 100% (some test problems count both as failure and error).

1.2.2 - 2014 November 03

* #14 support for @Unroll-ing variables not only in Spec names, but also in block texts

1.2.1 - 2014 November 01

* #12 stopped throwing Exception when a Specification setup method fails
* #12 appropriate reporting of Specification which did not run due to setup failing
* #13 removed usage of Groovy features that break with some JDK versions
      (notably VerifyError on Java 1.7_67 and 1.8_11)

1.2 - 2014 August 03

* #4 Support for @Unroll. Each unrolled iteration now shown as individual spec and placeholders are correctly resolved.
     Statistics also respect @Unroll semantics (each iteration failure is treated as a spec failure).
* #5 numbers shown in reports are internationalized
* #6 default config properties are merged with custom config (not replaced by it)
* #7 new config option to hide empty blocks (which do not have a description)

1.1 - 2013 Sep 14

* Fixed HTML footer alignment in summary report
* Added "when" and "who" ran tests to HTML reports
* Fixed bug with showing text for WHERE blocks in HTML reports
* Blocks with empty Strings or no Strings now show in HTML reports
* Text to the left of example tables in HTML reports are now called "Examples", not "Where"

1.0 - INITIAL RELEASE - 2013 August 06

* creates HTML summary reports for all specs run by Spock
* creates HTML feature reports for each individual spec